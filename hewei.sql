/*
 Navicat Premium Data Transfer

 Source Server         : 阿里云服务器
 Source Server Type    : MySQL
 Source Server Version : 50730
 Source Host           : 101.200.125.41:3306
 Source Schema         : hewei

 Target Server Type    : MySQL
 Target Server Version : 50730
 File Encoding         : 65001

 Date: 17/06/2020 16:08:35
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for blog_article
-- ----------------------------
DROP TABLE IF EXISTS `blog_article`;
CREATE TABLE `blog_article`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0 COMMENT '状态',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '标题',
  `bool_markdown` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否是markdown',
  `bool_publish` tinyint(1) NOT NULL DEFAULT 0 COMMENT '是否发布',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '内容',
  `html_content` longblob NULL COMMENT '文章html格式',
  `label_id` bigint(20) NULL DEFAULT NULL COMMENT '标签id',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `count_view` int(11) UNSIGNED NOT NULL DEFAULT 0 COMMENT '浏览量',
  `count_comment` int(11) UNSIGNED NOT NULL DEFAULT 0 COMMENT '评论数',
  `upload_article_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '上传的文章地址',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '博客文章表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_article
-- ----------------------------
INSERT INTO `blog_article` VALUES (1, '2020-05-25 10:29:46', '2020-06-12 14:09:29', 1, '标题', 1, 0, '# 111\n\n## 222\n\n### 333', 0x3C68313E3C612069643D223131315F30223E3C2F613E3131313C2F68313E0A3C68323E3C612069643D223232325F32223E3C2F613E3232323C2F68323E0A3C68333E3C612069643D223333335F34223E3C2F613E3333333C2F68333E0A, 1, 1, 0, 0, NULL);
INSERT INTO `blog_article` VALUES (2, '2020-05-25 10:40:29', '2020-06-12 17:41:47', 1, '测试', 1, 0, '## 测是\n\n答复安抚', NULL, 1, 1, 0, 0, NULL);
INSERT INTO `blog_article` VALUES (3, '2020-05-26 17:17:20', '2020-06-12 14:09:29', 0, '测试', 1, 0, '## 测试\n\n内容', 0x3C68323E3C612069643D225F30223E3C2F613EE6B58BE8AF953C2F68323E0A3C703EE58685E5AEB93C2F703E0A, 1, 1, 0, 0, NULL);
INSERT INTO `blog_article` VALUES (4, '2020-05-27 16:47:58', '2020-06-12 14:09:31', 0, '测试图片', 1, 0, '123', 0x3C703E3132333C2F703E0A, 2, 1, 0, 0, NULL);
INSERT INTO `blog_article` VALUES (5, '2020-05-29 15:36:01', '2020-06-12 14:09:31', 0, '测试功能', 1, 0, '~^下角标^~::: hljs-right\n\n**1. 下划线**## 二级标题\n\n:::\n', 0x3C703E3C7375623E5EE4B88BE8A792E6A0875E3C2F7375623E3A3A3A20686C6A732D72696768743C2F703E0A3C703E3C7374726F6E673E312E20E4B88BE58892E7BABF3C2F7374726F6E673E232320E4BA8CE7BAA7E6A087E9A2983C2F703E0A3C703E3A3A3A3C2F703E0A, 2, 1, 0, 0, NULL);
INSERT INTO `blog_article` VALUES (6, '2020-06-09 16:37:02', '2020-06-12 17:41:44', 1, '阿里云上搭建环境', 1, 0, '@[TOC]   \n\n一直想买台阿里服务器，奈何下不了决心，回首这五年工作经历，啥也不是。所以下定决心，花三百多买个三年的服务器用着，记录平时所学所想。\n![服务器信息.png](1)\n     搭建服务器上的环境，目标，部署下项目并可以访问。部署方式：手动部署，原因镜像要花钱。要不是贫穷，谁愿意整的自己一身才华。\n \n## 先整个mysql上去\n\n### 下载\n[下载地址]( https://dev.mysql.com/downloads/mysql/5.7.html#downloads)\n\n\n\n', 0x
INSERT INTO `blog_article` VALUES (7, '2020-06-11 21:34:45', '2020-06-12 14:09:33', 0, '测试哈', 1, 1, '去23', 0x3C703EE58EBB32333C2F703E0A, 3, 1, 0, 0, NULL);
INSERT INTO `blog_article` VALUES (8, '2020-06-12 14:57:23', '2020-06-12 17:04:04', 0, 'vue基于element-ui table做行内编辑', 1, 1, '在做行内编辑的时候，直接对对象数组的属性赋值发现没有做响应式的\n现象： 点击编辑的时候，没有切换程输入框。f12后，输入框才切换出来\n \n[vue文档地址](https://cn.vuejs.org/v2/guide/reactivity.html#%E5%A6%82%E4%BD%95%E8%BF%BD%E8%B8%AA%E5%8F%98%E5%8C%96)\n\n```\nvar vm = new Vue({\n  data: {\n    items: [\'a\', \'b\', \'c\']\n  }\n})\nvm.items[1] = \'x\' // 不是响应性的\nvm.items.length = 2 // 不是响应性的\n\n```\n\n代码如下\n```\n <el-table :data=\"labelList\" style=\"width: 100%\" border stripe>\n        <el-table-column type=\"index\" label=\"序号\" width=\"80\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"名称\" align=\"center\">\n            <template slot-scope=\"scope\">\n                <el-input placeholder=\"名称\" size=\"small\" v-show=\"scope.row.show\" v-model=\"scope.row.name\"></el-input>\n                <span v-show=\"!scope.row.show\">{{scope.row.name}}</span>\n            </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n            <template slot-scope=\"scope\">\n                <el-button v-if=\"!scope.row.show\" size=\"mini\" @click=\"handleEdit(scope.$index)\">编辑</el-button>\n                <el-button v-else size=\"mini\" @click=\"saveLabel(scope.row)\">保存</el-button>\n                <el-button type=\"danger\" size=\"mini\" @click=\"deleteLabel(scope.row.id)\">删除</el-button>\n            </template>\n        </el-table-column>\n    </el-table>\n```\n注意一下，需要给数组理的对象增加一个显示隐藏属性\n\n```\n    // 给每个对象加个属性\n    list.forEach(item => {\n        item[\"show\"] = false\n    });\n    this.labelList = list;\n```\n对数组的的对象属性做响应式赋值\n```\n handleEdit(index) {\n                // 对数组元素直接辅助是没有做响应式的\n                // https://cn.vuejs.org/v2/guide/reactivity.html#%E5%A6%82%E4%BD%95%E8%BF%BD%E8%B8%AA%E5%8F%98%E5%8C%96\n                // row.show = true; 这样是不行的\n   let data = this.labelList[index];\n   data = {\n   id: data.id,\n   name: data.name,\n   show: !data.show\n   }\n   this.$set(this.labelList, index, data)\n},\n```\n', 0x

-- ----------------------------
-- Table structure for blog_comment
-- ----------------------------
DROP TABLE IF EXISTS `blog_comment`;
CREATE TABLE `blog_comment`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0 COMMENT '状态',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `pid` bigint(20) NOT NULL COMMENT '父评论id',
  `count_like` int(11) NOT NULL COMMENT '点赞数',
  `content` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '评论内容',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '博客评论表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for blog_label
-- ----------------------------
DROP TABLE IF EXISTS `blog_label`;
CREATE TABLE `blog_label`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0 COMMENT '状态',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '类型名字',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '标签' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_label
-- ----------------------------
INSERT INTO `blog_label` VALUES (1, '2020-05-25 09:21:12', '2020-06-12 14:09:22', 0, 1, '计划');
INSERT INTO `blog_label` VALUES (2, '2020-05-25 09:27:13', '2020-06-12 16:36:30', 0, 1, 'java');
INSERT INTO `blog_label` VALUES (3, '2020-06-10 16:49:41', '2020-06-12 14:09:22', 0, 1, '运维');
INSERT INTO `blog_label` VALUES (4, '2020-06-12 16:08:35', '2020-06-12 16:42:13', 0, 1, '123');
INSERT INTO `blog_label` VALUES (5, '2020-06-12 16:10:31', '2020-06-12 16:42:13', 0, 1, '12345');
INSERT INTO `blog_label` VALUES (6, '2020-06-12 16:36:07', '2020-06-12 16:36:07', 0, 1, 'vue');
INSERT INTO `blog_label` VALUES (7, '2020-06-12 16:37:04', '2020-06-12 16:42:14', 0, 1, 'mysql');

-- ----------------------------
-- Table structure for sys_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_menu`;
CREATE TABLE `sys_menu`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_user` bigint(20) NOT NULL,
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_user` bigint(20) NULL DEFAULT NULL,
  `update_time` timestamp(0) NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0,
  `parent_id` bigint(20) NULL DEFAULT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '菜单名称',
  `url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '菜单对应的url',
  `type` tinyint(4) NOT NULL DEFAULT 0 COMMENT '0 navbar菜单',
  `icon` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '菜单图标',
  `sort` tinyint(4) NOT NULL COMMENT '排序',
  `level` tinyint(4) NOT NULL DEFAULT 0 COMMENT 'Level',
  `status` tinyint(4) NOT NULL DEFAULT 0 COMMENT '已激活',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '菜单表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_menu
-- ----------------------------
INSERT INTO `sys_menu` VALUES (1, 1, '2020-04-02 17:11:09', 1, '2020-06-15 16:11:38', 0, NULL, '系统管理', '', 0, 'el-icon-setting', 1, 0, 0);
INSERT INTO `sys_menu` VALUES (2, 1, '2020-04-02 17:12:04', 1, '2020-06-15 15:56:32', 0, 1, '用户管理', '/sys/user/User', 0, 'el-icon-service', 1, 1, 0);
INSERT INTO `sys_menu` VALUES (3, 1, '2020-04-02 18:56:27', NULL, '2020-05-27 17:12:51', 0, 1, '角色管理', '/sys/role/Role', 0, 'el-icon-view', 2, 1, 0);
INSERT INTO `sys_menu` VALUES (4, 1, '2020-04-02 18:58:07', NULL, '2020-05-27 17:13:01', 0, 1, '菜单管理', '/sys/menu/Menu', 0, 'el-icon-menu', 3, 1, 0);
INSERT INTO `sys_menu` VALUES (5, 1, '2020-05-27 16:58:31', NULL, '2020-06-10 17:11:21', 0, NULL, '博客管理', '/blog/Article', 0, 'el-icon-document', 2, 0, 0);

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_user` bigint(20) NOT NULL,
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_user` bigint(20) NULL DEFAULT NULL,
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '登录密码',
  `status` tinyint(4) NOT NULL DEFAULT 0 COMMENT '已激活',
  `code` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '简称',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '角色表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES (1, 1, '2020-04-02 16:43:07', NULL, '2020-06-16 09:24:15', 0, '管理员', 0, 'gly');
INSERT INTO `sys_role` VALUES (2, 1, '2020-06-16 09:26:22', NULL, '2020-06-16 09:26:22', 0, '游客', 0, 'yk');
INSERT INTO `sys_role` VALUES (3, 1, '2020-06-17 10:41:47', NULL, '2020-06-17 10:41:47', 0, '博客管理', 0, 'bkgl');

-- ----------------------------
-- Table structure for sys_role_menu
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_menu`;
CREATE TABLE `sys_role_menu`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_user` bigint(20) NOT NULL,
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_user` bigint(20) NULL DEFAULT NULL,
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0,
  `role_id` bigint(20) NOT NULL DEFAULT 0 COMMENT '角色id',
  `menu_id` bigint(20) NOT NULL COMMENT '菜单id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 18 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '角色菜单关联表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_role_menu
-- ----------------------------
INSERT INTO `sys_role_menu` VALUES (1, 1, '2020-04-02 16:44:10', 1, '2020-06-17 08:43:51', 1, 1, 1);
INSERT INTO `sys_role_menu` VALUES (2, 1, '2020-04-02 17:55:23', 1, '2020-06-17 08:35:40', 1, 1, 2);
INSERT INTO `sys_role_menu` VALUES (3, 1, '2020-04-02 18:58:32', 1, '2020-06-17 08:43:51', 1, 1, 3);
INSERT INTO `sys_role_menu` VALUES (4, 1, '2020-04-02 18:58:42', 1, '2020-06-17 08:43:51', 1, 1, 4);
INSERT INTO `sys_role_menu` VALUES (5, 1, '2020-05-27 17:02:16', 1, '2020-06-17 08:43:51', 1, 1, 5);
INSERT INTO `sys_role_menu` VALUES (6, 1, '2020-05-27 17:02:25', NULL, '2020-05-27 17:02:25', 0, 1, 6);
INSERT INTO `sys_role_menu` VALUES (7, 1, '2020-06-17 08:49:12', NULL, '2020-06-17 08:49:12', 0, 1, 1);
INSERT INTO `sys_role_menu` VALUES (8, 1, '2020-06-17 08:49:12', 1, '2020-06-17 08:52:58', 1, 1, 2);
INSERT INTO `sys_role_menu` VALUES (9, 1, '2020-06-17 08:49:12', NULL, '2020-06-17 08:49:12', 0, 1, 3);
INSERT INTO `sys_role_menu` VALUES (10, 1, '2020-06-17 08:49:12', NULL, '2020-06-17 08:49:12', 0, 1, 4);
INSERT INTO `sys_role_menu` VALUES (11, 1, '2020-06-17 08:49:12', NULL, '2020-06-17 08:49:12', 0, 1, 5);
INSERT INTO `sys_role_menu` VALUES (12, 1, '2020-06-17 08:54:46', 1, '2020-06-17 09:03:17', 1, 2, 5);
INSERT INTO `sys_role_menu` VALUES (13, 1, '2020-06-17 09:03:17', NULL, '2020-06-17 09:03:17', 0, 2, 3);
INSERT INTO `sys_role_menu` VALUES (14, 1, '2020-06-17 09:03:17', NULL, '2020-06-17 09:03:17', 0, 2, 1);
INSERT INTO `sys_role_menu` VALUES (15, 1, '2020-06-17 10:41:07', 1, '2020-06-17 10:45:00', 1, 2, 4);
INSERT INTO `sys_role_menu` VALUES (16, 1, '2020-06-17 10:47:01', NULL, '2020-06-17 10:47:01', 0, 3, 5);
INSERT INTO `sys_role_menu` VALUES (17, 1, '2020-06-17 10:48:02', NULL, '2020-06-17 10:48:02', 0, 1, 2);

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_user` bigint(20) NOT NULL,
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_user` bigint(20) NULL DEFAULT NULL,
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `username` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL COMMENT '登录密码',
  `deleted` tinyint(4) NOT NULL DEFAULT 0 COMMENT '状态',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '用户表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES (1, 1, '2020-01-15 16:06:45', NULL, '2020-04-02 16:38:58', 'admin', '82b9ec9d0778cf656de1925209577cfc', 0);
INSERT INTO `sys_user` VALUES (2, 1, '2020-06-17 15:09:09', NULL, '2020-06-17 15:09:09', '游客', 'cf683eab0c1f0e2e3522f11ccb86c849', 0);
INSERT INTO `sys_user` VALUES (3, 1, '2020-06-17 15:09:54', 1, '2020-06-17 15:23:25', '博客管理', 'e53ad1f782b22628d498cbeaba0b4b30', 1);

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_user` bigint(20) NOT NULL,
  `create_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '注册时间',
  `update_user` bigint(20) NULL DEFAULT NULL,
  `update_time` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间',
  `deleted` tinyint(4) NOT NULL DEFAULT 0,
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `role_id` bigint(20) NOT NULL DEFAULT 0 COMMENT '角色id',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci COMMENT = '用户角色关联表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES (1, 1, '2020-04-02 16:44:10', NULL, '2020-04-02 16:44:10', 0, 1, 1);
INSERT INTO `sys_user_role` VALUES (2, 1, '2020-06-17 15:09:09', NULL, '2020-06-17 15:09:09', 0, 2, 2);
INSERT INTO `sys_user_role` VALUES (3, 1, '2020-06-17 15:09:54', 1, '2020-06-17 15:23:25', 1, 3, 3);
INSERT INTO `sys_user_role` VALUES (4, 1, '2020-06-17 15:19:53', 1, '2020-06-17 15:20:03', 1, 3, 2);
INSERT INTO `sys_user_role` VALUES (5, 1, '2020-06-17 15:20:03', 1, '2020-06-17 15:20:24', 1, 3, 1);

SET FOREIGN_KEY_CHECKS = 1;
